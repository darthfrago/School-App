@using System.Web.Script.Serialization
@model List<School.Models.LearnerMarksViewModel>
@{
    ViewBag.Title = "Enter Marks";
}

<div class="spacer">
    <div class="container center">
        <h2 style="visibility: visible; animation-name: fadeInUp;" class="wowload fadeInUp animated">Enter marks</h2>
        <div style="visibility: visible; animation-name: fadeInLeftBig;" class="row wowload fadeInLeftBig animated">
            <div class="row" style="margin-bottom:20px">
                <div class="col-sm-2 col-sm-offset-3">
                    @Html.DropDownList("class_id", new SelectList((IEnumerable<SelectListItem>)ViewBag.Classes, "Value", "Text"), new { @class = "form-control", @data_bind = "value: currentFilter" })
                </div>
                <div class="col-sm-2">
                    @Html.DropDownList("subject_id", new SelectList((IEnumerable<SelectListItem>)ViewBag.Subjects, "Value", "Text"), new { @class = "form-control" })
                </div>
                <div class="col-sm-2">
                    <input type="text" placeholder="Description" class="form-control" name="description" id="description" />
                </div>
            </div>
            <div class="col-sm-6 col-sm-offset-3 col-xs-12">
                <table class="table table-condensed table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Surname</th>
                            <th>Marks</th>
                        </tr>
                    </thead>
                    <tbody data-bind="foreach: filteredLearners">
                        <tr>
                            <td><span data-bind="text: Name"></span></td>
                            <td><span data-bind="text: Surname"></span></td>
                            <td><input type="text" class="form-control" data-bind="value: Mark"></td>
                        </tr>
                    </tbody>
                </table>
                <button class="btn btn-primary" type="button" data-bind="click: $root.saveMarks">Save</button>                
            </div>
        </div>
    </div>
</div>
<!-- ERROR NOTIFICATION -->
<div class="alert alert-danger animated" id="errorDiv" style="position:fixed; z-index:2000; bottom: 5px; right: 10px; display:none">
    <span id="errorSpan">Oops! can't save, please try again</span>
</div>
<!-- SUCCESS NOTIFICATION -->
<div class="alert alert-success" id="successDiv" style="position:fixed; z-index:2000; bottom: 5px; right: 10px; display:none">
    <span id="successSpan">Marks saved successfully :)</span>
</div>

<script src="~/Scripts/jquery.js"></script>
<script src="~/Scripts/knockout-2.2.0.js"></script>
<script src="~/Scripts/knockout.mapping-latest.js"></script>
<script src="~/Scripts/bootstrap-switch.js"></script>
<script>    
    var data = @Html.Raw(new JavaScriptSerializer().Serialize(Model));

    //Knockout learner Model
    var learner = function (data) {
        var self = this;
        self.Name = ko.observable(data.Name);
        self.Surname = ko.observable(data.Surname);
        self.Mark = ko.observable(data.Mark);
        self.LearnerID = ko.observable(data.LearnerID);
        self.ClassID = ko.observable(data.ClassID);
    };

    //Knockout View Model
    function viewModel() {
        var self = this;

        self.learners = ko.observableArray([]);
        self.learners(ko.utils.unwrapObservable(ko.mapping.fromJS(data)));
        self.currentFilter = ko.observable(); // property to store the filter
        self.filteredLearners = ko.computed(function() { // compute filter
            if(!self.currentFilter() || self.currentFilter() == 0) {
                return self.learners();
            } else {
                return ko.utils.arrayFilter(self.learners(), function(learner) {
                    return learner.ClassID() == self.currentFilter();
                });
            }
        });
        
        self.saveMarks = function () {
            var classID = $("#class_id").val();
            var subjectID = $("#subject_id").val();
            var description = $("#description").val();

            if(self.filteredLearners().length > 0 && description.length > 0)
            {
                $.ajax({
                    url: '/Teacher/SaveMarks/',
                    type: 'POST',
                    contentType: "application/json",
                    data: ko.toJSON({ marks: self.filteredLearners, classID: classID, subjectID: subjectID, description: description }),
                    success: function (data) {
                        if (data) {
                            $("#successDiv").show().delay(3000).fadeOut();
                        }
                        else {
                            $("#errorSpan").html("Oops! can't save, please try again :(");
                            $("#errorDiv").show().delay(3000).fadeOut();
                        }
                    },
                    error: function () {                  
                        $("#errorSpan").html("Oops! can't save, please try again :(");
                        $("#errorDiv").show().delay(3000).fadeOut();
                    }
                })
            }
            else if(self.filteredLearners().length == 0)
            {
                $("#errorSpan").html("You don't have any marks to save :(");
                $("#errorDiv").show().delay(3000).fadeOut();
            }
            else
            {
                $("#errorSpan").html("It's not wise to save marks without a description :|");
                $("#errorDiv").show().delay(3000).fadeOut();
                $("#description").focus()
            }
        }
    }

    var instance = new viewModel();
    ko.applyBindings(instance);
</script>
